#!/usr/bin/perl

use warnings;
use strict;

use Wx;
use wxPerl::Constructors;
use Text::CSV;
my $csv = Text::CSV->new({ sep_char => ',' });

package MyApp;

use base 'Wx::App';
my $DebugOn = "true";

# --- No changes below here
my $VersionNumber = "1.0.0";
my $MyWxInfo = "";
my $myhome = $ENV{HOME};
my $GameDir = "$myhome/.aagames";
my $GameServersFile = "GameServers.csv";
my $NumServers = 0;

my @ServerList = ();
my %ServerHost;
my %ServerPort;

my $InAbout = 0;
my $InGameList = 0;
my $InSyncList = 0;

my $Server_List_URL = "http://argentumage.gameplayer.club/GameServers.csv";
my $Wget = "wget -q $Server_List_URL";

my $RunCommand = "./anura.sh --module=citadel";

# If storage folder doesn't exist, create it
if (! -d $GameDir)
{
	PrintDebug("Creating Directory '$GameDir'");
	mkdir $GameDir || die("Can't create the '$GameDir' folder");
}
chdir($GameDir);

# If storage folder doesn't exist, create it
if (! -f $GameServersFile)
{
	PrintDebug("Creating Servers file '$GameServersFile'");
#	system ("touch $GameServersFile");
	open(my $GameListOutputFH, '>', $GameServersFile) || die("Could not open $GameServersFile for writing");
	print ($GameListOutputFH "servername,serverhost,serverport");
	close($GameListOutputFH);
}

# Open up the server list
open(my $GameListFH, '<', $GameServersFile) || die("Could not open $GameServersFile");
while(my $line = <$GameListFH>)
{
	chomp($line);
	PrintDebug("Reading '$line' from server file");
	if ($csv->parse($line))
	{
		my ($ServerName, $ServerHostName, $ServerHostPort)  = $csv->fields();
		if ($ServerName ne "servername")
		{
			$NumServers++;
			PrintDebug("Server name: $ServerName");
			PrintDebug("Server host: $ServerHostName");
			PrintDebug("Server port: $ServerHostPort");
			push(@ServerList, $ServerName);
			$ServerHost{$ServerName} = $ServerHostName;
			$ServerPort{$ServerName} = $ServerHostPort;
		}
	}
	else
	{
		die("Line '$line' could not be processsed");
	}
}
close($GameListFH);
PrintDebug ("Read in $NumServers servers\n");

@ServerList = sort { lc($a) cmp lc($b) } @ServerList;

# Print debug info
sub PrintDebug
{
	if ($DebugOn eq "true")
	{
		print "$_[0]\n";
	}
}

# Sync the list of servers
sub SyncServerList
{
	PrintDebug("About to sync game server list");

	my $self = $MyWxInfo;

	my $frame = wxPerl::Frame->new(undef, 'About Argentum Age', size => [640, 480], position => [320, 320]);
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $AboutTextBefore = "Synchronizing server list

Click the 'Done' button when done





















";
	# Remove server list if exists
	if (-f "GameServers.csv")
	{
		unlink("GameServers.csv");
	}

	my $aboutText = wxPerl::StaticText->new($frame, $AboutTextBefore);
	$sizer->Add($aboutText);
	my $buttonDone = wxPerl::Button->new($frame, 'Done');
	$sizer->Add($buttonDone, 1, &Wx::wxEXPAND);
	Wx::Event::EVT_BUTTON($buttonDone, -1, sub {
		exec("AAGames");
	});

	$frame->SetSizer($sizer);
	$frame->Show;
	# Download the server list file
	system($Wget);
}

# Run game...
sub RunGame
{
	# Get the arguments
	my $CurServer = $_[0];
	my $CurPort = $_[1];
	my $MyChDir = "$myhome/.local/share/Steam/steamapps/common/Argentum\ Age";
	my $SystemCommand = "$RunCommand --server=$CurServer:$CurPort";

	PrintDebug("changing directory to '$MyChDir'");
	chdir("$MyChDir");
	PrintDebug("Running '$SystemCommand'");
	my $returnCode = system('$SystemCommand');
	if ( $returnCode != 0 )  # ZZZ
	{
		die("Failed executing '$SystemCommand'");
	}
	chdir($GameDir);
	PrintDebug("Game finished");
}

# Display list of games
sub DisplayGameList
{
	# Init buttons
	my $buttonOne;
	my $buttonTwo;
	my $buttonThree;
	my $buttonFour;
	my $buttonFive;
	my $buttonSix;
	my $buttonSeven;
	my $buttonEight;
	my $buttonNine;
	my $buttonTen;
	PrintDebug("About to display game server list");
	$InGameList = 0;
	my $self = $MyWxInfo;

	my $frame = wxPerl::Frame->new(undef, 'Choose your Argentum Age Game', size => [640, 480], position => [320, 320]);
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $AboutTextBefore = "Select a game from the list below";
	my $aboutText = wxPerl::StaticText->new($frame, $AboutTextBefore);
	$sizer->Add($aboutText);
	if ($NumServers > 0)
	{
		$buttonOne = wxPerl::Button->new($frame, @ServerList[0]);
		$sizer->Add($buttonOne, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 1)
	{
		$buttonTwo = wxPerl::Button->new($frame, @ServerList[1]);
		$sizer->Add($buttonTwo, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 2)
	{
		$buttonThree = wxPerl::Button->new($frame, @ServerList[2]);
		$sizer->Add($buttonThree, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 3)
	{
		$buttonFour = wxPerl::Button->new($frame, @ServerList[3]);
		$sizer->Add($buttonFour, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 4)
	{
		$buttonFive = wxPerl::Button->new($frame, @ServerList[4]);
		$sizer->Add($buttonFive, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 5)
	{
		$buttonSix = wxPerl::Button->new($frame, @ServerList[5]);
		$sizer->Add($buttonSix, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 6)
	{
		$buttonSeven = wxPerl::Button->new($frame, @ServerList[6]);
		$sizer->Add($buttonSeven, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 7)
	{
		$buttonEight = wxPerl::Button->new($frame, @ServerList[7]);
		$sizer->Add($buttonEight, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 8)
	{
		$buttonNine = wxPerl::Button->new($frame, @ServerList[8]);
		$sizer->Add($buttonNine, 1, &Wx::wxEXPAND);
	}
	if ($NumServers > 9)
	{
		$buttonTen = wxPerl::Button->new($frame, @ServerList[9]);
		$sizer->Add($buttonTen, 1, &Wx::wxEXPAND);
	}
	my $buttonDone = wxPerl::Button->new($frame, 'Done');
	$sizer->Add($buttonDone, 1, &Wx::wxEXPAND);

	# Button Events
	if ($NumServers > 0)
	{
		Wx::Event::EVT_BUTTON($buttonOne, -1, sub {
			RunGame($ServerHost{@ServerList[0]}, $ServerPort{@ServerList[0]});
		});
	}
	if ($NumServers > 1)
	{
		Wx::Event::EVT_BUTTON($buttonTwo, -1, sub {
			RunGame($ServerHost{@ServerList[1]}, $ServerPort{@ServerList[1]});
		});
	}
	if ($NumServers > 2)
	{
		Wx::Event::EVT_BUTTON($buttonThree, -1, sub {
			RunGame($ServerHost{@ServerList[2]}, $ServerPort{@ServerList[2]});
		});
	}
	if ($NumServers > 3)
	{
		Wx::Event::EVT_BUTTON($buttonFour, -1, sub {
			RunGame($ServerHost{@ServerList[3]}, $ServerPort{@ServerList[3]});
		});
	}
	if ($NumServers > 4)
	{
		Wx::Event::EVT_BUTTON($buttonFive, -1, sub {
			RunGame($ServerHost{@ServerList[4]}, $ServerPort{@ServerList[4]});
		});
	}
	if ($NumServers > 5)
	{
		Wx::Event::EVT_BUTTON($buttonSix, -1, sub {
			RunGame($ServerHost{@ServerList[5]}, $ServerPort{@ServerList[5]});
		});
	}
	if ($NumServers > 6)
	{
		Wx::Event::EVT_BUTTON($buttonSeven, -1, sub {
			RunGame($ServerHost{@ServerList[6]}, $ServerPort{@ServerList[6]});
		});
	}
	if ($NumServers > 7)
	{
		Wx::Event::EVT_BUTTON($buttonEight, -1, sub {
			RunGame($ServerHost{@ServerList[7]}, $ServerPort{@ServerList[7]});
		});
	}
	if ($NumServers > 8)
	{
		Wx::Event::EVT_BUTTON($buttonNine, -1, sub {
			RunGame($ServerHost{@ServerList[8]}, $ServerPort{@ServerList[8]});
		});
	}
	if ($NumServers > 9)
	{
		Wx::Event::EVT_BUTTON($buttonTen, -1, sub {
			RunGame($ServerHost{@ServerList[9]}, $ServerPort{@ServerList[9]});
		});
	}
	Wx::Event::EVT_BUTTON($buttonDone, -1, sub {
		$InGameList = 0;
		$frame->Close;
	});

	$frame->SetSizer($sizer);
	$frame->Show;
}

# About Popup
sub AboutPopup
{
	PrintDebug("About to open the About popup");
	my $self = $MyWxInfo;

	my $frame = wxPerl::Frame->new(undef, 'About Argentum Age', size => [640, 480], position => [320, 320]);
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $AboutTextBefore = "Welcome to Argentum Age Game Launcher - Version $VersionNumber

This is a game launcher for Argentum Age. It helps you to find games to play.





















";
	my $aboutText = wxPerl::StaticText->new($frame, $AboutTextBefore);
	$sizer->Add($aboutText);
	my $buttonDone = wxPerl::Button->new($frame, 'Done');
	$sizer->Add($buttonDone, 1, &Wx::wxEXPAND);
	Wx::Event::EVT_BUTTON($buttonDone, -1, sub {
		$InAbout = 0;
		$frame->Close;
	});

	$frame->SetSizer($sizer);
	$frame->Show;
}

# Main Init
sub OnInit
{
	my $self = shift;

	$MyWxInfo = $self;
	my $frame = wxPerl::Frame->new(undef, 'Argentum Age Games');
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $buttonGames = wxPerl::Button->new($frame, 'Games');
	$sizer->Add($buttonGames, 2, &Wx::wxEXPAND);
	my $buttonSync = wxPerl::Button->new($frame, 'Sync');
	$sizer->Add($buttonSync, 2, &Wx::wxEXPAND);
	my $buttonAbout = wxPerl::Button->new($frame, 'About');
	$sizer->Add($buttonAbout, 2, &Wx::wxEXPAND);
	my $buttonQuit = wxPerl::Button->new($frame, 'Quit');
	$sizer->Add($buttonQuit, 1, &Wx::wxEXPAND);
	Wx::Event::EVT_BUTTON($buttonGames, -1, sub {
		my ($b, $evt) = @_;
		#$b->SetLabel('Clicked');
		if ($InGameList == 0)
		{
			$InGameList = -1;
			$b->Disable;
			DisplayGameList();
			$b->Enable;
		}
	});
	Wx::Event::EVT_BUTTON($buttonAbout, -1, sub {
		my ($b, $evt) = @_;
		#$b->SetLabel('Clicked');
		if ($InAbout == 0)
		{
			$InAbout = -1;
			$b->Disable;
			AboutPopup();
			$b->Enable;
		}
	});
	Wx::Event::EVT_BUTTON($buttonSync, -1, sub {
		my ($b, $evt) = @_;
		#$b->SetLabel('Clicked');
		if ($InSyncList == 0)
		{
			$InSyncList = -1;
			$b->Disable;
			SyncServerList();
			$b->Enable;
		}
	});
	Wx::Event::EVT_BUTTON($buttonQuit, -1, sub {
		&Wx::wxTheApp->ExitMainLoop;
	});

	$frame->SetSizer($sizer);
	$frame->Show;
}

MyApp->new->MainLoop;

exit 0;
