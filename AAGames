#!/usr/bin/perl

use warnings;
use strict;

use Wx;
use wxPerl::Constructors;
use Text::CSV;
my $csv = Text::CSV->new({ sep_char => ',' });

package MyApp;

use base 'Wx::App';
my $DebugOn = "true";

# --- No changes below here
my $VersionNumber = "1.0.0";
my $MyWxInfo = "";
my $myhome = $ENV{HOME};
my $GameDir = "$myhome/.aagames";
my $GameServersFile = "GameServers.csv";
my $NumServers = 0;

my @ServerList = ();
my %ServerHost;
my %ServerPort;

my $InAbout = 0;
my $InGameList = 0;
my $InSyncList = 0;

my $Server_List_URL = "http://argentumage.gameplayer.club/GameServers.csv";
my $Wget = "wget -q $Server_List_URL";

#my $RunCommand = "~/.local/share/Steam/steamapps/common/Argentum\ Age/anura.sh --module=citadel --server=argentumage.gameplayer.club:23456";
my $RunCommand = "~/.local/share/Steam/steamapps/common/Argentum\ Age/anura.sh --module=citadel";

# If storage folder doesn't exist, create it
if (! -d $GameDir)
{
	PrintDebug("Creating Directory '$GameDir'");
	mkdir $GameDir || die("Can't create the '$GameDir' folder");;
}
chdir($GameDir);

# If storage folder doesn't exist, create it
if (! -f $GameServersFile)
{
	PrintDebug("Creating Servers file '$GameServersFile'");
#	system ("touch $GameServersFile");
	open(my $GameListOutputFH, '>', $GameServersFile) || die("Could not open $GameServersFile for writing");
	print ($GameListOutputFH "servername,serverhost,serverport");
	close($GameListOutputFH);
}

# Open up the server list
open(my $GameListFH, '<', $GameServersFile) || die("Could not open $GameServersFile");
while(my $line = <$GameListFH>)
{
	chomp($line);
	PrintDebug("Reading '$line' from server file");
	if ($csv->parse($line))
	{
		#my @fields = $csv->fields();
		my ($ServerName, $ServerHostName, $ServerHostPort)  = $csv->fields();
		if ($ServerName ne "servername")
		{
			$NumServers++;
			PrintDebug("Server name: $ServerName");
			PrintDebug("Server host: $ServerHostName");
			PrintDebug("Server port: $ServerHostPort");
			push(@ServerList, $ServerName);
			$ServerHost{$ServerName} = $ServerHostName;
			$ServerPort{$ServerName} = $ServerHostPort;
		}
	}
	else
	{
		die("Line '$line' could not be processsed");
	}
}
close($GameListFH);
PrintDebug ("Read in $NumServers servers\n");

# Print debug info
sub PrintDebug
{
	if ($DebugOn eq "true")
	{
		print "$_[0]\n";
	}
}

# Sync the list of servers
sub SyncServerList
{
	PrintDebug("About to sync game server list");

	my $self = $MyWxInfo;

	my $frame = wxPerl::Frame->new(undef, 'About Argentum Age', size => [640, 480], position => [320, 320]);
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $AboutTextBefore = "Synchronizing server list

Click the 'Done' button when done





















";
	# Remove server list if exists
	if (-f "GameServers.csv")
	{
		unlink("GameServers.csv");
	}

	my $aboutText = wxPerl::StaticText->new($frame, $AboutTextBefore);
	$sizer->Add($aboutText);
	my $buttonDone = wxPerl::Button->new($frame, 'Done');
	$sizer->Add($buttonDone, 1, &Wx::wxEXPAND);
	Wx::Event::EVT_BUTTON($buttonDone, -1, sub {
		exec("AAGames");
	});

	$frame->SetSizer($sizer);
	$frame->Show;
	# Download the server list file
	system($Wget);
}

# Display list of games
sub DisplayGameList
{
	PrintDebug("About to display game server list");
	$InGameList = 0;

}

# Run game...
sub RunGame
{
	# Get the arguments
	my $CurServer = $_[0];
	my $CurPort = $_[1];

	my $SystemCommand = "$RunCommand --server=$CurServer:$CurPort";

	PrintDebug("Running '$SystemCommand'");
	system($SystemCommand);
}

# About Popup
sub AboutPopup
{
	PrintDebug("About to open the About popup");
	my $self = $MyWxInfo;

	my $frame = wxPerl::Frame->new(undef, 'About Argentum Age', size => [640, 480], position => [320, 320]);
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $AboutTextBefore = "Welcome to Argentum Age Game Launcher - Version $VersionNumber

This is a game launcher for Argentum Age. It helps you to find games to play.





















";
	my $aboutText = wxPerl::StaticText->new($frame, $AboutTextBefore);
	$sizer->Add($aboutText);
	my $buttonDone = wxPerl::Button->new($frame, 'Done');
	$sizer->Add($buttonDone, 1, &Wx::wxEXPAND);
	Wx::Event::EVT_BUTTON($buttonDone, -1, sub {
		$InAbout = 0;
		$frame->Close;
	});

	$frame->SetSizer($sizer);
	$frame->Show;
}

# Main Init
sub OnInit
{
	my $self = shift;

	$MyWxInfo = $self;
	my $frame = wxPerl::Frame->new(undef, 'Argentum Age Games');
	$frame->SetMinSize([320,160]);
	my $sizer = Wx::BoxSizer->new(&Wx::wxVERTICAL);

	my $buttonGames = wxPerl::Button->new($frame, 'Games');
	$sizer->Add($buttonGames, 2, &Wx::wxEXPAND);
	my $buttonSync = wxPerl::Button->new($frame, 'Sync');
	$sizer->Add($buttonSync, 2, &Wx::wxEXPAND);
	my $buttonAbout = wxPerl::Button->new($frame, 'About');
	$sizer->Add($buttonAbout, 2, &Wx::wxEXPAND);
	my $buttonQuit = wxPerl::Button->new($frame, 'Quit');
	$sizer->Add($buttonQuit, 1, &Wx::wxEXPAND);
	Wx::Event::EVT_BUTTON($buttonGames, -1, sub {
		my ($b, $evt) = @_;
		#$b->SetLabel('Clicked');
		if ($InGameList == 0)
		{
			$InGameList = -1;
			$b->Disable;
			DisplayGameList();
			$b->Enable;
		}
	});
	Wx::Event::EVT_BUTTON($buttonAbout, -1, sub {
		my ($b, $evt) = @_;
		#$b->SetLabel('Clicked');
		if ($InAbout == 0)
		{
			$InAbout = -1;
			$b->Disable;
			AboutPopup();
			$b->Enable;
		}
	});
	Wx::Event::EVT_BUTTON($buttonSync, -1, sub {
		my ($b, $evt) = @_;
		#$b->SetLabel('Clicked');
		if ($InSyncList == 0)
		{
			$InSyncList = -1;
			$b->Disable;
			SyncServerList();
			$b->Enable;
		}
	});
	Wx::Event::EVT_BUTTON($buttonQuit, -1, sub {
		&Wx::wxTheApp->ExitMainLoop;
	});

	$frame->SetSizer($sizer);
	$frame->Show;
}

MyApp->new->MainLoop;

exit 0;
